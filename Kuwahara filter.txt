float3 mean[4] = {
	{0, 0, 0},
	{0, 0, 0},
	{0, 0, 0},
	{0, 0, 0}
};

float3 sigma[4] = {
	{0, 0, 0},
	{0, 0, 0},
	{0, 0, 0},
	{0, 0, 0}
};

float2 offsets[4] = {{-RADIUS.x, -RADIUS.y}, {-RADIUS.x, 0}, {0, -RADIUS.y}, {0, 0}};

float2 pos;
float3 col;

for(int i = 0; i < 4; i++)
{
	for(int j = 0; j <= RADIUS.x; j++)
	{
		for(int k = 0; k <= RADIUS.y; k++)
		{
			pos = float2(j, k) + offsets[i];
			float2 uvpos = UV + pos/VIEWSIZE;
			col = SceneTextureLookup(uvpos, 14, false);

			mean[i] += col;
			sigma[i] += col * col;
		}
	}
}
float n = (RADIUS.x+1) * (RADIUS.y+1);
float sigma_f;

float min = 1;

for(int i = 0; i < 4; i++)
{
	mean[i] /= n;
	sigma[i] = abs(sigma[i] / n - mean[i] * mean[i]);
	sigma_f = sigma[i].r + sigma[i].g + sigma[i].b;

	if (sigma_f < min)
	{
		min = sigma_f;
		col = mean[i];
	}
}

return col;